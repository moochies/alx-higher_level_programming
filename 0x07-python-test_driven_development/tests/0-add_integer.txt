The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

This is an example text file in reStructuredText format.  First import
``add_integer`` from the ``0-add_integer`` module:

	::
    		>>> add_integer = __import__('0-add_integer').add_integermam
    		>>> add_integer(2, 3)
    		5


	::
		>>> add_integer(3, 3)
		6
		>>> add_integer(-1, 3)
		2
		>>> add_integer(2.1, 1.1)
		3
		>>> add_integer(.2344)
		98
		>>> add_integer('a', 5)
		Traceback (most recent call last):
			...
		TypeError: a must be an integer

    		>>> add_integer(1, 'b')
    		Traceback (most recent call last):
        		...
    		TypeError: b must be an integer

	::
		>>> add_integer(float('inf'), 9)
		Traceback (most recent call last):
			...
		OverflowError: cannot convert float infinity to integer

		>>> add_integer(float('NaN'), 11)
		Traceback (most recent call last):
			...
		ValueError: cannot convert float NaN to integer
		>>> add_integer(None)
		Traceback (most recent call last):
			...
		TypeError: a must be an integer

		>>> add_integer({}, [2])
		Traceback (most recent call last):
			...
		TypeError: a must be an integer
